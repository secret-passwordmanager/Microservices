version: '2.3'

services: 
   # This container holds the database
   secret_mssql:
      container_name: secret_mssql
      image: mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-18.04
      environment: 
         - PUID=1000
         - PGID=1000
         - ACCEPT_EULA=Y
         - SA_PASSWORD=Anac0nda
      networks:
         - secret_net
      ports:
         - 1433:1433
      healthcheck:
      # Database will only be marked as healthy after it passes this
         test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Anac0nda' -Q 'SELECT 1' || exit 1"]
         interval: 2s
         timeout: 3s
         retries: 10
         start_period: 10s
      volumes: 
         - secretmssql
   
   # This container holds the api
   secret_user_api: 
      depends_on:
         secret_mssql:
            condition: service_healthy
      container_name: secret_user_api
      build:
         context: user_api/
      environment: 
         - PUID=1000
         - PGID=1000
      networks: 
         - secret_net
      ports:
         - 8000:80
      healthcheck:
      # User API will only be marked as "healthy" after it can make a request to itself
         test: ["CMD-SHELL", "curl localhost:80/users || exit 1"]
         interval: 2s
         timeout: 3s
         retries: 10
         start_period: 10s

   # This container holds mitm-proxy and our python script
   secret_mitm:
      depends_on:
         secret_user_api:
            condition: service_healthy
      container_name: secret_mitm
      build:
         context: mitm/
      environment: 
         - PUID=1000
         - PGID=1000
      networks: 
         - secret_net
      ports: 
         - 8001:8080 
      stdin_open: true # docker run -i
      tty: true # docker run -t

# By creating a vlan for all of the microservices, we can reference each one by it's
# container name instead of IP address in all of our code
networks:
   secret_net:
      name: secret_net
      driver: bridge

volumes: 
   secretmssql:
      driver: local